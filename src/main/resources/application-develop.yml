spring:
  application:
    name: workspace-server
  datasource:
    url: jdbc:mysql://192.168.6.3:4336/workspace?serverTimezone=UTC
    username: virnect-workspace
    password: virnect1234!
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    database-platform: org.hibernate.dialect.MySQL5InnoDBDialect
    properties:
      hibnerate:
        format_sql: true
      org:
        hibernate:
          envers:
            audit_table_suffix: _history
  redis:
    host: 192.168.6.3
  cloud:
    loadbalancer:
      ribbon:
        enabled: false
  servlet:
    multipart:
      max-file-size: 30MB
      max-request-size: 40MB
  messages:
    encoding: UTF-8
    basename: classpath:/messages
  zipkin:
    base-url: http://192.168.6.3:9411

logging:
  level:
    org.hibernate.type.descriptor.sql: trace
    com.virnect.workspace.application.*: DEBUG

## Server Configuration
server:
  port: 8082
#  address: 192.168.6.3

## Project Configuration
file:
  upload-path: "virnect-platform/workspace/profile/"
  url: "http://192.168.6.3:${server.port}/workspaces/"
  allow-extension: "gif,jpg,jpeg,png"

## Eureka Server Configuration
eureka:
  instance:
    prefer-ip-address: true
  client:
    service-url:
      defaultZone: http://192.168.6.3:8761/eureka

## Mail send rediect Url
serverUrl: "http://192.168.6.3:8082"
redirectUrl: "https://192.168.6.3:8878"
contactUrl: "http://192.168.6.3:3000/contact/inquiry"
accountUrl: "https://192.168.6.3:8822"
supportUrl: "http://192.168.6.3:3000/contact/inquiry"

## Feign
feign:
  hystrix:
    enabled: true
  client:
    config:
      default:
        connectTimeout: 1000
        readTimeout: 1000
hystrix:
  command:
    "UserRestService":
      execution.isolation.thread.timeoutInMilliseconds: 1000
      metrics.rollingStats.timeInMilliseconds: 60000
      circuitBreaker.requestVolumeThreshold: 5
      circuitBreaker.errorThresholdPercentage: 50
    "ProcessRestService":
      execution.isolation.thread.timeoutInMilliseconds: 1000
      metrics.rollingStats.timeInMilliseconds: 60000
      circuitBreaker.requestVolumeThreshold: 5
      circuitBreaker.errorThresholdPercentage: 50
    "LicenseRestService":
      execution.isolation.thread.timeoutInMilliseconds: 1000
      metrics.rollingStats.timeInMilliseconds: 60000
      circuitBreaker.requestVolumeThreshold: 5
      circuitBreaker.errorThresholdPercentage: 50
    "MessageRestService":
      execution.isolation.thread.timeoutInMilliseconds: 1000
      metrics.rollingStats.timeInMilliseconds: 60000
      circuitBreaker.requestVolumeThreshold: 5
      circuitBreaker.errorThresholdPercentage: 50

# monitoring
management:
  endpoints:
    web:
      exposure:
        include: prometheus
  metrics:
    tags:
      application: ${spring.application.name}

## AWS Storage
cloud:
  aws:
    credentials:
      access-key: virnect
      secret-key: virnect0!
    region:
      auto: true
    s3:
      bucket:
        name: "virnect-platform"
        resource: "workspace/profile"

## Minio
minio:
  url : "http://192.168.6.3:2838"